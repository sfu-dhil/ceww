# Read the documentation: https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/doc/setup.md
fos_elastica:
    clients:
        default:
            host: '%env(ELASTICSEARCH_HOST)%'
            port: '%env(ELASTICSEARCH_PORT)%'
            username: '%env(ELASTICSEARCH_USERNAME)%'
            password: '%env(ELASTICSEARCH_PASSWORD)%'
    indexes:
        alias:
            index_name: alias
            persistence: &default_persistence
                driver: orm
                model: App\Entity\Alias
                listener:
                    defer: true
                provider: ~
                finder: ~
            properties:
                name: { type: text }
                sortable: { type: keyword, property_path: sortableName }
                description: { type: text, property_path: descriptionSanitized }
                people:
                    type: object
                    properties:
                        fullName: { type: text }
        book:
            index_name: book
            persistence:
                <<: *default_persistence
                model: App\Entity\Book
            properties: &publication
                title: { type: text }
                sortable: { type: keyword, property_path: sortableTitle }
                description: { type: text, property_path: descriptionSanitized }
                dateYear:
                    type: object
                    properties:
                        year: { type: integer }
                location:
                    type: object
                    properties:
                        name: { type: text }
                        nameFacet: { type: keyword, property_path: name }
                genres:
                    type: object
                    properties:
                        label: { type: text }
                contributions:
                    type: object
                    properties:
                        person:
                            type: object
                            properties:
                                fullName: { type: text }
                publishers:
                    type: object
                    properties:
                        name: { type: text }
        compilation:
            index_name: compilation
            persistence:
                <<: *default_persistence
                model: App\Entity\Compilation
            properties:
                <<: *publication
        periodical:
            index_name: periodical
            persistence:
                <<: *default_persistence
                model: App\Entity\Periodical
            properties:
                <<: *publication
                # periodical extra fields
                continuedFrom: { type: text }
                continuedBy: { type: text }
        person:
            index_name: person
            persistence:
                <<: *default_persistence
                model: App\Entity\Person
            properties:
                fullName: { type: text }
                sortable: { type: keyword, property_path: sortableName }
                gender: { type: text }
                canadian: { type: boolean }
                description: { type: text, property_path: descriptionSanitized }
                birthDate:
                    type: object
                    properties:
                        year: { type: integer }
                birthPlace:
                    type: object
                    properties:
                        name: { type: text }
                deathDate:
                    type: object
                    properties:
                        year: { type: integer }
                deathPlace:
                    type: object
                    properties:
                        name: { type: text }
                residences:
                    type: object
                    properties:
                        name: { type: text }
                aliases:
                    type: object
                    properties:
                        name: { type: text }
        place:
            index_name: place
            persistence:
                <<: *default_persistence
                model: App\Entity\Place
            properties:
                name: { type: text }
                sortable: { type: keyword, property_path: sortableName }
                region: { type: text, property_path: regionName }
                regionFacet: { type: keyword, property_path: regionName }
                country: { type: text, property_path: countryName }
                countryFacet: { type: keyword, property_path: countryName }
                description: { type: text, property_path: descriptionSanitized }
                coordinates: { type: geo_point }
        publisher:
            index_name: publisher
            persistence:
                <<: *default_persistence
                model: App\Entity\Publisher
            properties:
                name: { type: text }
                sortable: { type: keyword, property_path: name }
                places:
                    type: object
                    properties:
                        name: { type: text }
                        nameFacet: { type: keyword, property_path: name }

when@test:
    fos_elastica:
        indexes:
            alias:
                index_name: test_alias
            book:
                index_name: test_book
            compilation:
                index_name: test_compilation
            periodical:
                index_name: test_periodical
            person:
                index_name: test_person
            place:
                index_name: test_place
            publisher:
                index_name: test_publisher
