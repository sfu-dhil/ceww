# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

imports:
    - { resource: '../vendor/beberlei/doctrineextensions/config/mysql.yml' }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    router.request_context.scheme: '%env(string:ROUTE_PROTOCOL)%'
    router.request_context.host: '%env(string:ROUTE_HOST)%'
    router.request_context.base_url: '%env(string:ROUTE_BASE)%'

    asset.request_context.base_path: '%env(string:ROUTE_BASE)%'
    asset.request_context.secure: auto

    app.geonames.username: '%env(GEONAMES_USERNAME)%'
    page_size: 50

    dhil.matomo_enabled: '%env(bool:MATOMO_ENABLED)%'
    dhil.matomo_url: //matomo.lib.sfu.ca/library/
    dhil.matomo_siteid: 37
    dhil.matomo_domain: dhil.lib.sfu.ca/doceww

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Extension,Migrations,Tests,Kernel.php}'

    App\Command\PlacesUpdateCommand:
        arguments:
            $username: '%app.geonames.username%'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags:
            - 'controller.service_arguments'
            - 'knp_paginator.injectable'

    App\Controller\AliasController:
        tags:
            - 'controller.service_arguments'
            - 'knp_paginator.injectable'
        arguments:
            - '@fos_elastica.finder.alias'

    App\Controller\PersonController:
        tags:
            - 'controller.service_arguments'
            - 'knp_paginator.injectable'
        arguments:
            - '@fos_elastica.finder.person'

    App\Controller\PlaceController:
        tags:
            - 'controller.service_arguments'
            - 'knp_paginator.injectable'
        arguments:
            - '@fos_elastica.finder.place'

    App\Controller\PublisherController:
        tags:
            - 'controller.service_arguments'
            - 'knp_paginator.injectable'
        arguments:
            - '@fos_elastica.finder.publisher'

    App\Controller\DefaultController:
        tags:
            - 'controller.service_arguments'
            - 'knp_paginator.injectable'
        arguments:
            - '@fos_elastica.index_manager'
            - '@fos_elastica.elastica_to_model_transformer.alias'
            - '@fos_elastica.elastica_to_model_transformer.book'
            - '@fos_elastica.elastica_to_model_transformer.compilation'
            - '@fos_elastica.elastica_to_model_transformer.periodical'
            - '@fos_elastica.elastica_to_model_transformer.person'
            - '@fos_elastica.elastica_to_model_transformer.place'
            - '@fos_elastica.elastica_to_model_transformer.publisher'

    App\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main}
